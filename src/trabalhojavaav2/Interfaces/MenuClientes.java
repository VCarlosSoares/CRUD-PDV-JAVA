package trabalhojavaav2.Interfaces;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import trabalhojavaav2.BancoDeDados.ClienteBD;
import trabalhojavaav2.Classes.Cliente;
import trabalhojavaav2.ModelosTabela.ModeloTabelaCliente;
import trabalhojavaav2.OperacaoCadastro;

/**
 *
 * @author vitor
 */
public class MenuClientes extends javax.swing.JDialog {

    private ClienteBD clienteBD;
    private ModeloTabelaCliente modeloCliente;
    private DefaultComboBoxModel modeloConsulta;
    
    private boolean confirmado;
    private Cliente cli;
    
    public MenuClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        clienteBD = new ClienteBD();
        modeloCliente = new ModeloTabelaCliente(new ArrayList<Cliente>());
        modeloConsulta = new DefaultComboBoxModel();
        tabClientes.setModel(modeloCliente);
        cbConsultaCli.setModel(modeloConsulta);
        atualizarModelo();
        preencherModeloConsulta();
        
        buSelecionarCli.setEnabled(false);
    }
    
    public MenuClientes(java.awt.Frame parent, OperacaoCadastro operacao, Cliente cli) {
        super(parent, true);
        initComponents();
        clienteBD = new ClienteBD();
        modeloCliente = new ModeloTabelaCliente(new ArrayList<Cliente>());
        modeloConsulta = new DefaultComboBoxModel();
        tabClientes.setModel(modeloCliente);
        cbConsultaCli.setModel(modeloConsulta);
        atualizarModelo();
        preencherModeloConsulta();
        
        this.cli = cli;
        confirmado = false;
        
        if (operacao == OperacaoCadastro.ocSelecionar) {
            buInserirCli.setEnabled(false);
            buAlterarCli.setEnabled(false);
            buExcluirCli.setEnabled(false);
        } else {
            buSelecionarCli.setEnabled(false);
        }
    }
    
    private void atualizarModelo() {
        try {
            limparModelo();
            ArrayList <Cliente> clientes = new ArrayList<Cliente>() ;
            clientes = clienteBD.lerClientes();
            for (int i = 0; i < clientes.size(); i++) {
                Cliente cliente = clientes.get(i);
                modeloCliente.incluirCliente(cliente);
            }
        } catch (NullPointerException e) {
            System.err.println(e.getMessage());
        }
    }
    
    private void atualizarModelo(ArrayList <Cliente> clientes) {
        try {
            limparModelo();
            for (int i = 0; i < clientes.size(); i++) {
                Cliente cliente = clientes.get(i);
                modeloCliente.incluirCliente(cliente);
            }
        } catch (NullPointerException e) {
            System.err.println(e.getMessage());
        }
    }
    
    private void preencherModeloConsulta() {
        modeloConsulta.addElement("Codigo");
        modeloConsulta.addElement("Nome");
        modeloConsulta.addElement("CPF");
    }
    
    private ArrayList <Cliente> consultarClientes() {
        ArrayList <Cliente> clientes = new ArrayList <Cliente>();
        String opcao = cbConsultaCli.getItemAt(cbConsultaCli.getSelectedIndex()).toUpperCase();
        String dado = textBuscarCli.getText().toUpperCase();
        if (!dado.equals("")) {
            if (opcao.equals("CODIGO")) {
                opcao = "CODIGO_CLIENTE";
            }
            clientes = clienteBD.buscarClientesPorEspecificacao(opcao, dado);
            if (clientes != null) {
                return clientes;
            } else {
                JOptionPane.showMessageDialog(this, "Cliente nao encontrado!");
            }
        } else {
            atualizarModelo();
        }
        return null;
    }
    
    private void limparModelo() {
        for (int i = modeloCliente.getRowCount()-1; i >= 0; i--) {
            modeloCliente.excluirCliente(i);
        }
    }
    
    public boolean operacaoConfirmada() {
        return confirmado;
    }
    
    public static boolean executar(java.awt.Frame parent, OperacaoCadastro operacaoCadastro, Cliente cli) {
        MenuClientes menuClientes= new MenuClientes(parent, operacaoCadastro, cli);
        menuClientes.setLocationRelativeTo(null);
        menuClientes.setVisible(true);
        return menuClientes.operacaoConfirmada();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabClientes = new javax.swing.JTable();
        jSeparator7 = new javax.swing.JSeparator();
        buInserirCli = new javax.swing.JButton();
        buAlterarCli = new javax.swing.JButton();
        buExcluirCli = new javax.swing.JButton();
        buConsultarCli = new javax.swing.JButton();
        buVoltarCli = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        buBuscarCli = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textBuscarCli = new javax.swing.JTextField();
        cbConsultaCli = new javax.swing.JComboBox<>();
        buSelecionarCli = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro Clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        tabClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(tabClientes);

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);

        buInserirCli.setText("Inserir");
        buInserirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buInserirCliActionPerformed(evt);
            }
        });

        buAlterarCli.setText("Alterar");
        buAlterarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buAlterarCliActionPerformed(evt);
            }
        });

        buExcluirCli.setText("Excluir");
        buExcluirCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buExcluirCliActionPerformed(evt);
            }
        });

        buConsultarCli.setText("Consultar");
        buConsultarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buConsultarCliActionPerformed(evt);
            }
        });

        buVoltarCli.setText("Voltar");
        buVoltarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buVoltarCliActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar Por:");

        buBuscarCli.setText("Buscar");
        buBuscarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buBuscarCliActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar:");

        buSelecionarCli.setText("Selecionar");
        buSelecionarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buSelecionarCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbConsultaCli, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textBuscarCli, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(buBuscarCli))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buAlterarCli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buInserirCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buConsultarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buExcluirCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buSelecionarCli, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(buVoltarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator7)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(buInserirCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buAlterarCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buExcluirCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buConsultarCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buSelecionarCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buVoltarCli)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buBuscarCli)
                    .addComponent(jLabel2)
                    .addComponent(cbConsultaCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBuscarCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buVoltarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buVoltarCliActionPerformed
        dispose();
    }//GEN-LAST:event_buVoltarCliActionPerformed

    private void buInserirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buInserirCliActionPerformed
        Cliente cliente = new Cliente();
        if (MenuCadClientes.executar(null, OperacaoCadastro.ocIncluir, cliente)) {
            modeloCliente.incluirCliente(clienteBD.inserirCliente(cliente));
        }
    }//GEN-LAST:event_buInserirCliActionPerformed

    private void buAlterarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buAlterarCliActionPerformed
        int indice = tabClientes.getSelectedRow();
        if (indice >= 0) {
            Cliente cliente = modeloCliente.obterCliente(indice);
            if (cliente.obterCodigo() == 1) {
                JOptionPane.showMessageDialog(this, "Não é possível alterar esse cliente!");
            } else {
                if (MenuCadClientes.executar(null, OperacaoCadastro.ocAlterar, cliente)) {
                    clienteBD.alterarCliente(cliente);
                    modeloCliente.atualizarCliente(indice, cliente);
                }
            }
        }
    }//GEN-LAST:event_buAlterarCliActionPerformed

    private void buExcluirCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buExcluirCliActionPerformed
        int indice = tabClientes.getSelectedRow();
        if (indice >= 0) {
            Cliente cliente = modeloCliente.obterCliente(indice);
            if (cliente.obterCodigo() == 1) {
                JOptionPane.showMessageDialog(this, "Não é possível excluir esse cliente!");
            } else {
                int opcao = JOptionPane.showConfirmDialog(this, "Confirmar Exclusao de:  "+cliente.obterNome(), "Exclusao", 
                                                      JOptionPane.YES_NO_OPTION);
                if (opcao == 0) {
                    clienteBD.excluirCliente(cliente);
                    modeloCliente.excluirCliente(indice);
                }
            }
        }
    }//GEN-LAST:event_buExcluirCliActionPerformed

    private void buConsultarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buConsultarCliActionPerformed
        int indice = tabClientes.getSelectedRow();
        if (indice >= 0) {
            Cliente cliente = modeloCliente.obterCliente(indice);
            System.out.println(cliente.obterNome());
            MenuCadClientes.executar(null, OperacaoCadastro.ocConsultar, cliente);
        }
    }//GEN-LAST:event_buConsultarCliActionPerformed

    private void buBuscarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buBuscarCliActionPerformed
        ArrayList <Cliente> clientes = new ArrayList<Cliente>();
        clientes = consultarClientes();
        if (clientes != null) {
            atualizarModelo(clientes);
        }
    }//GEN-LAST:event_buBuscarCliActionPerformed

    private void buSelecionarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buSelecionarCliActionPerformed
        int indice = tabClientes.getSelectedRow();
        if (indice >= 0) {
            Cliente cliente = modeloCliente.obterCliente(indice);
            cli.atualizarCodigo(cliente.obterCodigo());
            cli.atualizarNome(cliente.obterNome());
            cli.atualizarCpf(cliente.obterCpf());
            cli.atualizarEstado(cliente.obterEstado());
            cli.atualizarCidade(cliente.obterEmail());
            cli.atualizarBairro(cliente.obterBairro());
            cli.atualizarRua(cliente.obterRua());
            cli.atualizarComplemento(cliente.obterComplemento());
            cli.atualizarTelefone(cliente.obterTelefone());
            cli.atualizarEmail(cliente.obterEmail());
            
            confirmado=true;
            dispose();
        }
    }//GEN-LAST:event_buSelecionarCliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuClientes dialog = new MenuClientes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buAlterarCli;
    private javax.swing.JButton buBuscarCli;
    private javax.swing.JButton buConsultarCli;
    private javax.swing.JButton buExcluirCli;
    private javax.swing.JButton buInserirCli;
    private javax.swing.JButton buSelecionarCli;
    private javax.swing.JButton buVoltarCli;
    private javax.swing.JComboBox<String> cbConsultaCli;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable tabClientes;
    private javax.swing.JTextField textBuscarCli;
    // End of variables declaration//GEN-END:variables
}
